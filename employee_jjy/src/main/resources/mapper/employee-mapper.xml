<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eco.employee.mapper.EmployeeMapper">

	<!-- 중복쿼리 제거 -->
	<sql id="selectEmployee">
		SELECT	EMPLOYEE_NO      -- 직원 번호 --
				, EMPLOYEE_NM	 -- 직원 이름 --
				, REGEXP_REPLACE (HP_NO, '(.{3})(.+)(.{4})', '\1-\2-\3') AS HP_NO -- 휴대폰 번호 --
				, EMAIL			 -- 이메일 --
				, TO_CHAR(TO_DATE(ENTR_DT, 'yyyy-mm-dd'), 'yyyy-mm-dd') AS ENTR_DT -- 입사 일자 --
				, TO_CHAR(TO_DATE(RETR_DT, 'yyyy-mm-dd'), 'yyyy-mm-dd') AS RETR_DT -- 퇴사 일자 --
				, BASE_ADR		 -- 기본 주소 --
				, DTL_ADR		 -- 상세 주소 --
				, ZIP_NO		 -- 우편 번호 --
				, BIRTH_DT		 -- 생년월일 --
				, WRK_TYP_CD	 -- 근무형태코드 --
				, PSTN_NM 		 -- 직책 이름 --
				, RANK_NM		 -- 직급 이름 --
				, DEL_YN		 -- 삭제 여부 --
				, REG_ID		 -- 등록자 --
				, TO_CHAR(TO_DATE(REG_DTM, 'yyyy-mm-dd hh24:mi:ss'), 'yyyy-mm-dd hh24:mi:ss') AS REG_DTM -- 등록 일시 --
				, MOD_ID		 -- 수정자 --
				, TO_CHAR(TO_DATE(MOD_DTM, 'yyyy-mm-dd hh24:mi:ss'), 'yyyy-mm-dd hh24:mi:ss') AS MOD_DTM -- 수정 일시 --
		  FROM	EMPLOYEE_JJY_MST
	</sql>

	<!-- 관리자 권한 없을 때 조회목록 -->
	<select id = "getListNotAdmin" resultType = "EmployeeDTO">
		<include refid="selectEmployee"></include>
		WHERE DEL_YN = 'N'
		ORDER BY REG_DTM DESC
	</select>
	
	<!-- 관리자 권한 있을 때 조회목록 -->
	<select id = "getListByAdmin" resultType = "EmployeeDTO">
		<include refid="selectEmployee"></include>
		ORDER BY REG_DTM DESC
	</select>
	
	<insert id = "saveEmployee" parameterType="List">
		INSERT INTO EMPLOYEE_JJY_MST
					( EMPLOYEE_NO		-- 자동채번 --
					, EMPLOYEE_NM
					, HP_NO
					, EMAIL
					, ENTR_DT
					, RETR_DT
					, WRK_TYP_CD
					, BASE_ADR
					, DTL_ADR
					, ZIP_NO
					, BIRTH_DT
					, PSTN_NM
					, RANK_NM			-- Default : 주임 --
					, DEL_YN			-- Default : N --
					, REG_ID
					, REG_DTM
					, MOD_ID
					, MOD_DTM
					)
			 VALUES 
			 <foreach collection="list" item="item" separator=",">
			 	(
			 		 'E'
			 		  ||(SELECT TO_CHAR(sysdate, 'yyyy') FROM DUAL)
			 		  ||LPAD(employee_no_seq.NEXTVAL, 4, 0)
			 		, #{item.employee_nm}
			 		, #{item.hp_no}
			 		, #{item.email}
			 		, replace(#{item.entr_dt},'-','')
			 		, replace(#{item.retr_dt},'-','')
			 		, #{item.wrk_typ_cd}
			 		, #{item.base_adr}
			 		, #{item.dtl_adr}
			 		, #{item.zip_no}
			 		, #{item.birth_dt}
			 		, #{item.pstn_nm}
			 		, NVL(#{item.rank_nm}, '주임')
			 		, DEFAULT
			 		, #{item.reg_id}
			 		, TO_CHAR(sysdate, 'yyyymmddhh24miss')
			 		, #{item.mod_id}
			 		, TO_CHAR(sysdate, 'yyyymmddhh24miss')
			 	)
			</foreach>
	</insert>
	
	<update id="deleteEmployee" parameterType="EmployeeDTO">
		UPDATE EMPLOYEE_JJY_MST
		   SET DEL_YN = 'Y'
			   , MOD_DTM = TO_CHAR(sysdate, 'yyyymmddhh24miss')
		 WHERE EMPLOYEE_NO = #{employee_no}
	</update>
	
	<select id ="searchEmployee" parameterType="hashMap" resultType ="EmployeeDTO">
		<include refid="selectEmployee"></include>
		<choose>
			<when test="checkSwitchDelYn == 'true'">
				WHERE DEL_YN = 'Y'
			</when>
			<otherwise>
				WHERE DEL_YN = 'N'
			</otherwise>
		</choose>
		<if test="searchType != 'select' and data != null">
         	   AND ${searchType} LIKE '%' || #{data} || '%'
   		</if>
	</select>
	
	<!-- 퇴사일자가 지났는데도 직원목록에 남아있는 직원 수 -->
	<select id="overRetrDtEmployee" resultType="int">
	   SELECT COUNT(EMPLOYEE_NO)
	     FROM EMPLOYEE_JJY_MST
		WHERE RETR_DT <![CDATA[<]]> SYSDATE
			  AND DEL_YN='N'
	</select>
	
</mapper>